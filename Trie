struct Node{
    Node *child[26];
    bool leaf = false;

    bool containsChild(char c){
        return child[c - 'a'] != NULL;
    }

    void put(char c, Node* node){
        child[c - 'a'] = node;
    }

    Node* get(char c){
        return child[c - 'a'];
    }

    void setEnd(){
        leaf = true;
    }
};

class Trie{
public:
    Node* root;
    Trie(){
        root = new Node();
    }

    void insert(string word){   
        Node* node = root;
        for(int i = 0;i < word.size();i++){
            if(!node->containsChild(word[i])){
                node->put(word[i], new Node());
            }
            node = node->get(word[i]);
        }
        node->setEnd();
    }
};
